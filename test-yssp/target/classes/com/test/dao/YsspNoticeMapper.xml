<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.YsspNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.test.pojo.YsspNotice" >
    <id column="notice_id" property="noticeId" jdbcType="BIGINT" />
    <result column="notice_from" property="noticeFrom" jdbcType="BIGINT" />
    <result column="notice_to" property="noticeTo" jdbcType="BIGINT" />
    <result column="notice_content" property="noticeContent" jdbcType="VARCHAR" />
    <result column="notice_type" property="noticeType" jdbcType="TINYINT" />
    <result column="notice_artworkid" property="noticeArtworkid" jdbcType="BIGINT" />
    <result column="notice_sendtime" property="noticeSendtime" jdbcType="VARCHAR" />
    <result column="notice_status" property="noticeStatus" jdbcType="TINYINT" />
    <result column="notice_remarks" property="noticeRemarks" jdbcType="VARCHAR" />
    <result column="notice_artwork_type" property="noticeArtworkType" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.test.pojo.YsspNoticeWithBLOBs"
		extends="BaseResultMap">
	<!-- 用户信息 -->
	<association property="userIntegralView" javaType="com.test.pojo.QyUserIntegralView">
				<result column="ID" property="id" jdbcType="BIGINT" />
		<result column="userID" property="userid" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="openID" property="openid" jdbcType="VARCHAR" />
		<result column="wxName" property="wxname" jdbcType="VARCHAR" />
		<result column="Head_portrait_url" property="headPortraitUrl"
			jdbcType="VARCHAR" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="user_vip_level" property="userVipLevel"
			jdbcType="VARCHAR" />
		<result column="user_source" property="userSource" jdbcType="VARCHAR" />
		<result column="user_address" property="userAddress" jdbcType="VARCHAR" />
		<result column="user_father_name" property="userFatherName"
			jdbcType="VARCHAR" />
		<result column="user_father_id" property="userFatherId"
			jdbcType="BIGINT" />
		<result column="user_remark" property="userRemark" jdbcType="LONGVARCHAR" />
		<result column="member_integral" property="memberIntegral"
			jdbcType="INTEGER" />
		<result column="member_accumulative_integral" property="memberAccumulativeIntegral"
			jdbcType="BIGINT" />
		<result column="member_accumulative_money" property="memberAccumulativeMoney"
			jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</association>
	<!-- 实名认证信息 -->
	<association property="userRealNameWithBLOBs" javaType="com.test.pojo.YsspUserRealNameWithBLOBs">
				<id column="real_name_userId" property="realNameUserid" jdbcType="BIGINT" />
		<result column="real_name_username" property="realNameUsername"
			jdbcType="VARCHAR" />
		<result column="real_name_DocumentType" property="realNameDocumenttype"
			jdbcType="TINYINT" />
		<result column="real_name_Document_num" property="realNameDocumentNum"
			jdbcType="VARCHAR" />
		<result column="real_name_Document_tel" property="realNameDocumentTel"
			jdbcType="VARCHAR" />
		<result column="real_name_email" property="realNameEmail"
			jdbcType="VARCHAR" />
		<result column="real_name_Country" property="realNameCountry"
			jdbcType="VARCHAR" />
		<result column="real_name_province" property="realNameProvince"
			jdbcType="VARCHAR" />
		<result column="real_name_city" property="realNameCity"
			jdbcType="VARCHAR" />
		<result column="real_name_createTime" property="realNameCreatetime"
			jdbcType="VARCHAR" />
		<result column="real_name_updateTime" property="realNameUpdatetime"
			jdbcType="VARCHAR" />
		<result column="real_name_status" property="realNameStatus"
			jdbcType="TINYINT" />
		<result column="real_name_remark" property="realNameRemark"
			jdbcType="VARCHAR" />
		<result column="Document_front" property="documentFront"
			jdbcType="LONGVARCHAR" />
		<result column="Document_Back" property="documentBack"
			jdbcType="LONGVARCHAR" />
	</association>
  	<!-- 作品信息 -->
  	 
  	<association property="artworkWithBLOBs" javaType="com.test.pojo.YsspArtworkWithBLOBs">
  		<id column="artwork_id" property="artworkId" jdbcType="BIGINT" />
		<result column="artwork_name" property="artworkName" jdbcType="VARCHAR" />
		<result column="artwork_authorId" property="artworkAuthorid"
			jdbcType="BIGINT" />
		<result column="artwork_type" property="artworkType" jdbcType="TINYINT" />
		<result column="artwork_width" property="artworkWidth"
			jdbcType="VARCHAR" />
		<result column="artwork_height" property="artworkHeight"
			jdbcType="VARCHAR" />
		<result column="artwork_weigth" property="artworkWeigth"
			jdbcType="VARCHAR" />
		<result column="artwork_year" property="artworkYear" jdbcType="VARCHAR" />
		<result column="artwork_Label" property="artworkLabel"
			jdbcType="VARCHAR" />
		<result column="artwork_examine_status" property="artworkExamineStatus"
			jdbcType="TINYINT" />
		<result column="artwork_status" property="artworkStatus"
			jdbcType="TINYINT" />
		<result column="artwork_createTime" property="artworkCreatetime"
			jdbcType="VARCHAR" />
		<result column="artwork_updateTime" property="artworkUpdatetime"
			jdbcType="VARCHAR" />
		<result column="artwork_Auditor" property="artworkAuditor"
			jdbcType="BIGINT" />
		<result column="artwork_browse_Number" property="artworkBrowseNumber"
			jdbcType="BIGINT" />
		<result column="artwork_comment_Number" property="artworkCommentNumber"
			jdbcType="BIGINT" />
		<result column="artwork_likes_Number" property="artworkLikesNumber"
			jdbcType="BIGINT" />
		<result column="artwork_share_Number" property="artworkShareNumber"
			jdbcType="BIGINT" />
		<result column="artwork_remark" property="artworkRemark"
			jdbcType="VARCHAR" />
		<result column="artwork_introduce" property="artworkIntroduce"
			jdbcType="LONGVARCHAR" />
		<result column="artwork_imgs" property="artworkImgs" jdbcType="LONGVARCHAR" />
  	</association>
  	<association property="interactiveWithBLOBs" javaType="com.test.pojo.YsspInteractiveWithBLOBs">
  		<id column="Interactive_id" property="interactiveId" jdbcType="BIGINT" />
		<result column="Interactive_memberId" property="interactiveMemberid"
			jdbcType="BIGINT" />
		<result column="Interactive_label" property="interactiveLabel"
			jdbcType="VARCHAR" />
		<result column="Interactive_position" property="interactivePosition"
			jdbcType="VARCHAR" />
		<result column="Interactive_createTime" property="interactiveCreatetime"
			jdbcType="VARCHAR" />
		<result column="Interactive_comment_Number" property="interactiveCommentNumber"
			jdbcType="BIGINT" />
		<result column="Interactive_likes_Number" property="interactiveLikesNumber"
			jdbcType="BIGINT" />
		<result column="Interactive_share_Number" property="interactiveShareNumber"
			jdbcType="BIGINT" />
		<result column="Interactive_Collection_Number" property="interactiveCollectionNumber"
			jdbcType="BIGINT" />
		<result column="Interactive_examine_status" property="interactiveExamineStatus"
			jdbcType="TINYINT" />
		<result column="Interactive_status" property="interactiveStatus"
			jdbcType="TINYINT" />
		<result column="Interactive_body" property="interactiveBody"
			jdbcType="LONGVARCHAR" />
		<result column="Interactive_img" property="interactiveImg"
			jdbcType="LONGVARCHAR" />
  	</association>
  </resultMap>
  <select id="queryAllNotice" resultMap="BaseResultMap">
	select * from yssp_notice;
  </select>
	
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    notice_id, notice_from, notice_to, notice_content, notice_type, notice_artworkid, 
    notice_sendtime, notice_status, notice_remarks, notice_artwork_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.pojo.YsspNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yssp_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from yssp_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from yssp_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.pojo.YsspNoticeExample" >
    delete from yssp_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.pojo.YsspNotice" >
    insert into yssp_notice (notice_id, notice_from, notice_to, 
      notice_content, notice_type, notice_artworkid, 
      notice_sendtime, notice_status, notice_remarks, 
      notice_artwork_type)
    values (#{noticeId,jdbcType=BIGINT}, #{noticeFrom,jdbcType=BIGINT}, #{noticeTo,jdbcType=BIGINT}, 
      #{noticeContent,jdbcType=VARCHAR}, #{noticeType,jdbcType=TINYINT}, #{noticeArtworkid,jdbcType=BIGINT}, 
      #{noticeSendtime,jdbcType=VARCHAR}, #{noticeStatus,jdbcType=TINYINT}, #{noticeRemarks,jdbcType=VARCHAR}, 
      #{noticeArtworkType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.test.pojo.YsspNotice" >
    insert into yssp_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        notice_id,
      </if>
      <if test="noticeFrom != null" >
        notice_from,
      </if>
      <if test="noticeTo != null" >
        notice_to,
      </if>
      <if test="noticeContent != null" >
        notice_content,
      </if>
      <if test="noticeType != null" >
        notice_type,
      </if>
      <if test="noticeArtworkid != null" >
        notice_artworkid,
      </if>
      <if test="noticeSendtime != null" >
        notice_sendtime,
      </if>
      <if test="noticeStatus != null" >
        notice_status,
      </if>
      <if test="noticeRemarks != null" >
        notice_remarks,
      </if>
      <if test="noticeArtworkType != null" >
        notice_artwork_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        #{noticeId,jdbcType=BIGINT},
      </if>
      <if test="noticeFrom != null" >
        #{noticeFrom,jdbcType=BIGINT},
      </if>
      <if test="noticeTo != null" >
        #{noticeTo,jdbcType=BIGINT},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null" >
        #{noticeType,jdbcType=TINYINT},
      </if>
      <if test="noticeArtworkid != null" >
        #{noticeArtworkid,jdbcType=BIGINT},
      </if>
      <if test="noticeSendtime != null" >
        #{noticeSendtime,jdbcType=VARCHAR},
      </if>
      <if test="noticeStatus != null" >
        #{noticeStatus,jdbcType=TINYINT},
      </if>
      <if test="noticeRemarks != null" >
        #{noticeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="noticeArtworkType != null" >
        #{noticeArtworkType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.pojo.YsspNoticeExample" resultType="java.lang.Integer" >
    select count(*) from yssp_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yssp_notice
    <set >
      <if test="record.noticeId != null" >
        notice_id = #{record.noticeId,jdbcType=BIGINT},
      </if>
      <if test="record.noticeFrom != null" >
        notice_from = #{record.noticeFrom,jdbcType=BIGINT},
      </if>
      <if test="record.noticeTo != null" >
        notice_to = #{record.noticeTo,jdbcType=BIGINT},
      </if>
      <if test="record.noticeContent != null" >
        notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null" >
        notice_type = #{record.noticeType,jdbcType=TINYINT},
      </if>
      <if test="record.noticeArtworkid != null" >
        notice_artworkid = #{record.noticeArtworkid,jdbcType=BIGINT},
      </if>
      <if test="record.noticeSendtime != null" >
        notice_sendtime = #{record.noticeSendtime,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeStatus != null" >
        notice_status = #{record.noticeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.noticeRemarks != null" >
        notice_remarks = #{record.noticeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeArtworkType != null" >
        notice_artwork_type = #{record.noticeArtworkType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yssp_notice
    set notice_id = #{record.noticeId,jdbcType=BIGINT},
      notice_from = #{record.noticeFrom,jdbcType=BIGINT},
      notice_to = #{record.noticeTo,jdbcType=BIGINT},
      notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=TINYINT},
      notice_artworkid = #{record.noticeArtworkid,jdbcType=BIGINT},
      notice_sendtime = #{record.noticeSendtime,jdbcType=VARCHAR},
      notice_status = #{record.noticeStatus,jdbcType=TINYINT},
      notice_remarks = #{record.noticeRemarks,jdbcType=VARCHAR},
      notice_artwork_type = #{record.noticeArtworkType,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.pojo.YsspNotice" >
    update yssp_notice
    <set >
      <if test="noticeFrom != null" >
        notice_from = #{noticeFrom,jdbcType=BIGINT},
      </if>
      <if test="noticeTo != null" >
        notice_to = #{noticeTo,jdbcType=BIGINT},
      </if>
      <if test="noticeContent != null" >
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null" >
        notice_type = #{noticeType,jdbcType=TINYINT},
      </if>
      <if test="noticeArtworkid != null" >
        notice_artworkid = #{noticeArtworkid,jdbcType=BIGINT},
      </if>
      <if test="noticeSendtime != null" >
        notice_sendtime = #{noticeSendtime,jdbcType=VARCHAR},
      </if>
      <if test="noticeStatus != null" >
        notice_status = #{noticeStatus,jdbcType=TINYINT},
      </if>
      <if test="noticeRemarks != null" >
        notice_remarks = #{noticeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="noticeArtworkType != null" >
        notice_artwork_type = #{noticeArtworkType,jdbcType=TINYINT},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.pojo.YsspNotice" >
    update yssp_notice
    set notice_from = #{noticeFrom,jdbcType=BIGINT},
      notice_to = #{noticeTo,jdbcType=BIGINT},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=TINYINT},
      notice_artworkid = #{noticeArtworkid,jdbcType=BIGINT},
      notice_sendtime = #{noticeSendtime,jdbcType=VARCHAR},
      notice_status = #{noticeStatus,jdbcType=TINYINT},
      notice_remarks = #{noticeRemarks,jdbcType=VARCHAR},
      notice_artwork_type = #{noticeArtworkType,jdbcType=TINYINT}
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>

	<select id="selectNoticeForFollow" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
			n.notice_to =#{userId}
		AND 
			n.notice_type =1
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC
	</select>
	
	<select id="selectNoticeForComment" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid AND artwork_status =1
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid AND i.Interactive_status =1
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND 
			n.notice_type =2
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC	
	</select>
	
	<select id="selectNoticeForFavorite" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid AND artwork_status =1
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid AND i.Interactive_status =1
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND 
			n.notice_type =3
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC
	</select>
	
	<update id="updateNoticeStatusIsRead">
		UPDATE 
			yssp_notice 
		SET 
			notice_status =2 
		WHERE 
			notice_id 
		IN
		<foreach collection="list" index="index" item="nptoceId" open="(" separator="," close=")">
			#{nptoceId}
		</foreach>
	</update>
	<select id="selectNoticeCountForFollow" resultType="java.lang.Long">
		SELECT 
			COUNT(a.notice_id) 
		FROM
		(SELECT
		 n.*,
		 u.*,
		 urn.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
			n.notice_to =#{userId}
		AND 
			n.notice_type =1
		AND 
			n.notice_status = 1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC)a
	</select>
	<select id="selectByIdForFollow" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
			n.notice_id = #{noticeId}
		AND
			n.notice_to = #{userId}
		AND 
			n.notice_type =1
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC
	</select>
	<select id="selectNoticeCountForComment" resultType="java.lang.Long">
		SELECT 
			COUNT(a.notice_id) 
		FROM
		(SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND 
			n.notice_type =2
		AND 
			n.notice_status = 1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC)a
	</select>
	<select id="selectByIdForComment" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND
			n.notice_id = #{noticeId}
		AND 
			n.notice_type =2
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC
	</select>
	<select id="selectCountForFavorite" resultType="java.lang.Long">
		SELECT 
			COUNT(a.notice_id) 
		FROM
		(SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND 
			n.notice_type =3
		AND 
			n.notice_status = 1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC)a
	</select>
	<select id="selectByIdForFavorite" resultMap="ResultMapWithBLOBs">
		SELECT
		 n.*,
		 u.*,
		 urn.*,
		 a.*,
		 i.*
		FROM
			yssp_notice n
		INNER JOIN
			qy_user u ON n.notice_from =u.ID
		LEFT JOIN
			yssp_artwork a ON a.artwork_id = n.notice_artworkid
		LEFT JOIN
			yssp_interactive i ON i.Interactive_id = n.notice_artworkid
		LEFT JOIN
			yssp_user_real_name urn ON n.notice_from =urn.real_name_userId 
		WHERE
		(
			a.artwork_authorId =#{userId}
		OR 
			i.Interactive_memberId =#{userId}
		OR
			n.notice_to = #{userId}
		)
		AND
			n.notice_id = #{noticeId}
		AND 
			n.notice_type =3
		AND 
			n.notice_status !=-1
		GROUP BY
			n.notice_id
		ORDER BY
			n.notice_sendtime
		DESC
	</select>
</mapper>