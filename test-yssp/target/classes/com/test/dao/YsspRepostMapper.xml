<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.YsspRepostMapper" >
  <resultMap id="BaseResultMap" type="com.test.pojo.YsspRepost" >
    <result column="repost_id" property="repostId" jdbcType="BIGINT" />
    <result column="repost_user_id" property="repostUserId" jdbcType="BIGINT" />
    <result column="repost_works_id" property="repostWorksId" jdbcType="BIGINT" />
    <result column="repost_works_type" property="repostWorksType" jdbcType="TINYINT" />
    <result column="repost_status" property="repostStatus" jdbcType="TINYINT" />
    <result column="repost_created_time" property="repostCreatedTime" jdbcType="VARCHAR" />
    <result column="repost_updated_time" property="repostUpdatedTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    repost_id, repost_user_id, repost_works_id, repost_works_type, repost_status, repost_created_time, 
    repost_updated_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.pojo.YsspRepostExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yssp_repost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.test.pojo.YsspRepostExample" >
    delete from yssp_repost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.pojo.YsspRepost" >
    insert into yssp_repost (repost_id, repost_user_id, repost_works_id, 
      repost_works_type, repost_status, repost_created_time, 
      repost_updated_time)
    values (#{repostId,jdbcType=BIGINT}, #{repostUserId,jdbcType=BIGINT}, #{repostWorksId,jdbcType=BIGINT}, 
      #{repostWorksType,jdbcType=TINYINT}, #{repostStatus,jdbcType=TINYINT}, #{repostCreatedTime,jdbcType=VARCHAR}, 
      #{repostUpdatedTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.test.pojo.YsspRepost" >
    insert into yssp_repost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="repostId != null" >
        repost_id,
      </if>
      <if test="repostUserId != null" >
        repost_user_id,
      </if>
      <if test="repostWorksId != null" >
        repost_works_id,
      </if>
      <if test="repostWorksType != null" >
        repost_works_type,
      </if>
      <if test="repostStatus != null" >
        repost_status,
      </if>
      <if test="repostCreatedTime != null" >
        repost_created_time,
      </if>
      <if test="repostUpdatedTime != null" >
        repost_updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="repostId != null" >
        #{repostId,jdbcType=BIGINT},
      </if>
      <if test="repostUserId != null" >
        #{repostUserId,jdbcType=BIGINT},
      </if>
      <if test="repostWorksId != null" >
        #{repostWorksId,jdbcType=BIGINT},
      </if>
      <if test="repostWorksType != null" >
        #{repostWorksType,jdbcType=TINYINT},
      </if>
      <if test="repostStatus != null" >
        #{repostStatus,jdbcType=TINYINT},
      </if>
      <if test="repostCreatedTime != null" >
        #{repostCreatedTime,jdbcType=VARCHAR},
      </if>
      <if test="repostUpdatedTime != null" >
        #{repostUpdatedTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.pojo.YsspRepostExample" resultType="java.lang.Integer" >
    select count(*) from yssp_repost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yssp_repost
    <set >
      <if test="record.repostId != null" >
        repost_id = #{record.repostId,jdbcType=BIGINT},
      </if>
      <if test="record.repostUserId != null" >
        repost_user_id = #{record.repostUserId,jdbcType=BIGINT},
      </if>
      <if test="record.repostWorksId != null" >
        repost_works_id = #{record.repostWorksId,jdbcType=BIGINT},
      </if>
      <if test="record.repostWorksType != null" >
        repost_works_type = #{record.repostWorksType,jdbcType=TINYINT},
      </if>
      <if test="record.repostStatus != null" >
        repost_status = #{record.repostStatus,jdbcType=TINYINT},
      </if>
      <if test="record.repostCreatedTime != null" >
        repost_created_time = #{record.repostCreatedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.repostUpdatedTime != null" >
        repost_updated_time = #{record.repostUpdatedTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  
    <resultMap id="queryRepostByUser" type="com.test.pojo.YsspRepostBelongs" extends="BaseResultMap">
   	<association property="qyUserIntegralView" javaType="com.test.pojo.QyUserIntegralView">
		<result column="ID" property="id" jdbcType="BIGINT" />
		<result column="userID" property="userid" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="openID" property="openid" jdbcType="VARCHAR" />
		<result column="wxName" property="wxname" jdbcType="VARCHAR" />
		<result column="Head_portrait_url" property="headPortraitUrl"
			jdbcType="VARCHAR" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="user_vip_level" property="userVipLevel"
			jdbcType="VARCHAR" />
		<result column="user_source" property="userSource" jdbcType="VARCHAR" />
		<result column="user_address" property="userAddress" jdbcType="VARCHAR" />
		<result column="user_father_name" property="userFatherName"
			jdbcType="VARCHAR" />
		<result column="user_father_id" property="userFatherId"
			jdbcType="BIGINT" />
		<result column="user_remark" property="userRemark" jdbcType="LONGVARCHAR" />
		<result column="member_integral" property="memberIntegral"
			jdbcType="INTEGER" />
		<result column="member_accumulative_integral" property="memberAccumulativeIntegral"
			jdbcType="BIGINT" />
		<result column="member_accumulative_money" property="memberAccumulativeMoney"
			jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  
  
  
  
  <update id="updateByExample" parameterType="map" >
    update yssp_repost
    set repost_id = #{record.repostId,jdbcType=BIGINT},
      repost_user_id = #{record.repostUserId,jdbcType=BIGINT},
      repost_works_id = #{record.repostWorksId,jdbcType=BIGINT},
      repost_works_type = #{record.repostWorksType,jdbcType=TINYINT},
      repost_status = #{record.repostStatus,jdbcType=TINYINT},
      repost_created_time = #{record.repostCreatedTime,jdbcType=VARCHAR},
      repost_updated_time = #{record.repostUpdatedTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
	  <select id="queryRepostByWorksId" resultType="java.lang.Integer">
	  	select count(*) from yssp_repost where repost_works_id = #{worksId} and repost_works_type = #{type}
	  </select>
	  
	    
	  <select id="queryRepostInfoById" resultMap="queryRepostByUser">
	  	select 
	  		r.*,u.* 
	  	from 
	  		yssp_repost r,
	  		qy_user u 
	  	where 
	  		repost_works_id = #{worksId} 
	  	and 
	  		repost_works_type = #{type} 
	  	and 
	  		r.repost_user_id = u.ID 
	  	GROUP BY r.repost_id
	  	order by repost_created_time DESC
	  </select>
	  
	  <select id="selectRepostCountByType" resultType="java.lang.Long">
		  SELECT
				COUNT(repost_id)
			FROM
				yssp_repost
			WHERE
				repost_works_id = #{repostWorksId,jdbcType=BIGINT}
			AND
				repost_works_type =#{repostWorksType,jdbcType=TINYINT}
			AND
				repost_status !=-1
	  </select>
</mapper>