<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.YsspCommentMapper">
	<resultMap id="BaseResultMap" type="com.test.pojo.YsspComment">
		<id column="comment_id" property="commentId" jdbcType="BIGINT" />
		<result column="comment_user_id" property="commentUserId"
			jdbcType="BIGINT" />
		<result column="comment_work_id" property="commentWorkId"
			jdbcType="BIGINT" />
		<result column="comment_content" property="commentContent"
			jdbcType="VARCHAR" />
		<result column="comment_favorite_count" property="commentFavoriteCount"
			jdbcType="BIGINT" />
		<result column="comment_created_time" property="commentCreatedTime"
			jdbcType="VARCHAR" />
		<result column="comment_update_time" property="commentUpdateTime"
			jdbcType="VARCHAR" />
		<result column="comment_status" property="commentStatus"
			jdbcType="TINYINT" />
		<result column="comment_flag" property="commentFlag" jdbcType="INTEGER" />
		<result column="wxName" property="wxName" jdbcType="VARCHAR" />
		<result column="Head_portrait_url" property="HeadPortraitUrl"
			jdbcType="VARCHAR" />
		<result column="favorite_id" property="favoriteId" jdbcType="INTEGER" />
		<collection property="ysspCommentReplys" column="comment_id"
			select="com.test.dao.YsspCommentReplyMapper.selectByCommentId"></collection>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		comment_id, comment_user_id, comment_work_id,
		comment_content,
		comment_favorite_count,
		comment_created_time,
		comment_update_time, comment_status, comment_flag
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.test.pojo.YsspCommentExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from yssp_comment
		<choose>
			<when test="_parameter != null">
				<include refid="Example_Where_Clause" />
				and comment_status = 1
			</when>
			<otherwise>
				where comment_status = 1
			</otherwise>
		</choose>


		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from yssp_comment
		where comment_id = #{commentId,jdbcType=BIGINT} and
		comment_status = 1
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		yssp_comment
		where comment_id = #{commentId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.test.pojo.YsspCommentExample">
		delete from yssp_comment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.test.pojo.YsspComment">
		insert into yssp_comment
		(comment_id, comment_user_id,
		comment_work_id,
		comment_content,
		comment_favorite_count, comment_created_time,
		comment_update_time,
		comment_status, comment_flag
		)
		values (#{commentId,jdbcType=BIGINT},
		#{commentUserId,jdbcType=BIGINT},
		#{commentWorkId,jdbcType=BIGINT},
		#{commentContent,jdbcType=VARCHAR},
		#{commentFavoriteCount,jdbcType=BIGINT},
		#{commentCreatedTime,jdbcType=VARCHAR},
		#{commentUpdateTime,jdbcType=VARCHAR},
		#{commentStatus,jdbcType=TINYINT}, #{commentFlag,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.test.pojo.YsspComment">
		insert into yssp_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="commentId != null">
				comment_id,
			</if>
			<if test="commentUserId != null">
				comment_user_id,
			</if>
			<if test="commentWorkId != null">
				comment_work_id,
			</if>
			<if test="commentContent != null">
				comment_content,
			</if>
			<if test="commentFavoriteCount != null">
				comment_favorite_count,
			</if>
			<if test="commentCreatedTime != null">
				comment_created_time,
			</if>
			<if test="commentUpdateTime != null">
				comment_update_time,
			</if>
			<if test="commentStatus != null">
				comment_status,
			</if>
			<if test="commentFlag != null">
				comment_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="commentId != null">
				#{commentId,jdbcType=BIGINT},
			</if>
			<if test="commentUserId != null">
				#{commentUserId,jdbcType=BIGINT},
			</if>
			<if test="commentWorkId != null">
				#{commentWorkId,jdbcType=BIGINT},
			</if>
			<if test="commentContent != null">
				#{commentContent,jdbcType=VARCHAR},
			</if>
			<if test="commentFavoriteCount != null">
				#{commentFavoriteCount,jdbcType=BIGINT},
			</if>
			<if test="commentCreatedTime != null">
				#{commentCreatedTime,jdbcType=VARCHAR},
			</if>
			<if test="commentUpdateTime != null">
				#{commentUpdateTime,jdbcType=VARCHAR},
			</if>
			<if test="commentStatus != null">
				#{commentStatus,jdbcType=TINYINT},
			</if>
			<if test="commentFlag != null">
				#{commentFlag,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.test.pojo.YsspCommentExample"
		resultType="java.lang.Integer">
		select count(*) from yssp_comment
		<choose>
			<when test="_parameter != null">
				<include refid="Example_Where_Clause" />
				and comment_status = 1
			</when>
			<otherwise>
				where comment_status = 1
			</otherwise>
		</choose>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update yssp_comment
		<set>
			<if test="record.commentId != null">
				comment_id = #{record.commentId,jdbcType=BIGINT},
			</if>
			<if test="record.commentUserId != null">
				comment_user_id =
				#{record.commentUserId,jdbcType=BIGINT},
			</if>
			<if test="record.commentWorkId != null">
				comment_work_id =
				#{record.commentWorkId,jdbcType=BIGINT},
			</if>
			<if test="record.commentContent != null">
				comment_content =
				#{record.commentContent,jdbcType=VARCHAR},
			</if>
			<if test="record.commentFavoriteCount != null">
				comment_favorite_count =
				#{record.commentFavoriteCount,jdbcType=BIGINT},
			</if>
			<if test="record.commentCreatedTime != null">
				comment_created_time =
				#{record.commentCreatedTime,jdbcType=VARCHAR},
			</if>
			<if test="record.commentUpdateTime != null">
				comment_update_time =
				#{record.commentUpdateTime,jdbcType=VARCHAR},
			</if>
			<if test="record.commentStatus != null">
				comment_status =
				#{record.commentStatus,jdbcType=TINYINT},
			</if>
			<if test="record.commentFlag != null">
				comment_flag = #{record.commentFlag,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update yssp_comment
		set comment_id =
		#{record.commentId,jdbcType=BIGINT},
		comment_user_id =
		#{record.commentUserId,jdbcType=BIGINT},
		comment_work_id =
		#{record.commentWorkId,jdbcType=BIGINT},
		comment_content =
		#{record.commentContent,jdbcType=VARCHAR},
		comment_favorite_count =
		#{record.commentFavoriteCount,jdbcType=BIGINT},
		comment_created_time =
		#{record.commentCreatedTime,jdbcType=VARCHAR},
		comment_update_time =
		#{record.commentUpdateTime,jdbcType=VARCHAR},
		comment_status =
		#{record.commentStatus,jdbcType=TINYINT},
		comment_flag =
		#{record.commentFlag,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.test.pojo.YsspComment">
		update yssp_comment
		<set>
			<if test="commentUserId != null">
				comment_user_id = #{commentUserId,jdbcType=BIGINT},
			</if>
			<if test="commentWorkId != null">
				comment_work_id = #{commentWorkId,jdbcType=BIGINT},
			</if>
			<if test="commentContent != null">
				comment_content = #{commentContent,jdbcType=VARCHAR},
			</if>
			<if test="commentFavoriteCount != null">
				comment_favorite_count =
				#{commentFavoriteCount,jdbcType=BIGINT},
			</if>
			<if test="commentCreatedTime != null">
				comment_created_time =
				#{commentCreatedTime,jdbcType=VARCHAR},
			</if>
			<if test="commentUpdateTime != null">
				comment_update_time =
				#{commentUpdateTime,jdbcType=VARCHAR},
			</if>
			<if test="commentStatus != null">
				comment_status = #{commentStatus,jdbcType=TINYINT},
			</if>
			<if test="commentFlag != null">
				comment_flag = #{commentFlag,jdbcType=INTEGER},
			</if>
		</set>
		where comment_id = #{commentId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.test.pojo.YsspComment">
		update
		yssp_comment
		set comment_user_id = #{commentUserId,jdbcType=BIGINT},
		comment_work_id = #{commentWorkId,jdbcType=BIGINT},
		comment_content =
		#{commentContent,jdbcType=VARCHAR},
		comment_favorite_count =
		#{commentFavoriteCount,jdbcType=BIGINT},
		comment_created_time =
		#{commentCreatedTime,jdbcType=VARCHAR},
		comment_update_time =
		#{commentUpdateTime,jdbcType=VARCHAR},
		comment_status =
		#{commentStatus,jdbcType=TINYINT},
		comment_flag =
		#{commentFlag,jdbcType=INTEGER}
		where comment_id =
		#{commentId,jdbcType=BIGINT}
	</update>
	<update id="updateLikeNumer">
		UPDATE yssp_comment
		set comment_favorite_count = comment_favorite_count +
		#{num,jdbcType=INTEGER}
		where comment_id = #{commentId,jdbcType=BIGINT} and comment_status = 1
	</update>

	<!-- 查询出所有的评价信息 -->
	<select id="selectAllComment" resultMap="BaseResultMap">
		SELECT
		yc.*,qu.wxName,qu.`Head_portrait_url` FROM `yssp_comment` yc
		JOIN
		`qy_user_integral_view` qu ON yc.`comment_user_id` = qu.ID
		AND
		yc.comment_flag = #{commentFlag,jdbcType=INTEGER} and
		yc.comment_status = 1
	</select>

	<!-- 查询作品的评论 -->
	<select id="selectCommentById" resultMap="BaseResultMap">
		SELECT yc.*,qu.wxName,qu.`Head_portrait_url`,yf.favorite_id FROM
		`yssp_comment` yc
		JOIN `qy_user_integral_view` qu ON
		yc.`comment_user_id` = qu.ID
		AND yc.comment_flag =
		#{commentFlag,jdbcType=INTEGER} AND
		yc.comment_work_id=#{workId,jdbcType=BIGINT}
		LEFT JOIN yssp_favorite yf
		ON yf.favorite_user_id = #{userId,jdbcType=BIGINT} AND
		yf.favorite_works_type=#{favoriteWorksType,jdbcType=TINYINT}
		AND
		yf.favorite_works_id = yc.comment_id where yc.comment_status = 1
		ORDER
		BY yc.comment_created_time DESC
	</select>

	<!-- 查询作品中回复最多的评论 -->
	<select id="selectMoreReplyComment" resultMap="BaseResultMap">
		SELECT
		yc.*,qu.wxName,qu.`Head_portrait_url`
		FROM `yssp_comment` yc JOIN
		`qy_user_integral_view` qu ON yc.`comment_user_id` = qu.ID
		AND
		yc.comment_work_id=#{workId,jdbcType=BIGINT} AND yc.comment_flag =
		#{commentFlag,jdbcType=INTEGER} where yc.comment_status = 1
	</select>

	<update id="delComment" parameterType="java.lang.Long">
		update yssp_comment
		set
		comment_status = 0
		where comment_id = #{aId,jdbcType=BIGINT}
	</update>
	<select id="selectByCommentId" resultMap="BaseResultMap">
		SELECT
		yc.*,
		qu.wxName,
		qu.Head_portrait_url
		FROM
		yssp_comment yc
		LEFT JOIN qy_user qu ON yc.comment_user_id =qu.ID
		WHERE
		yc.comment_id = #{commentId}
	</select>
	<select id="selectCommentCountById" resultType="java.lang.Long">
		SELECT
		COUNT(yc.comment_id)
		FROM `yssp_comment` yc
		JOIN `qy_user_integral_view` qu ON
		yc.`comment_user_id` = qu.ID
		AND yc.comment_flag =
		#{commentFlag,jdbcType=INTEGER} AND
		yc.comment_work_id=#{workId,jdbcType=BIGINT}
		LEFT JOIN yssp_favorite yf
		ON yf.favorite_user_id = #{userId,jdbcType=BIGINT} AND
		yf.favorite_works_type=#{favoriteWorksType,jdbcType=TINYINT}
		AND
		yf.favorite_works_id = yc.comment_id where yc.comment_status = 1
		ORDER
		BY yc.comment_created_time DESC
	</select>

	<select id="selectCommentByInteractiveId" resultMap="BaseResultMap">
		SELECT
		yc.*,
		qu.wxName,
		qu.`Head_portrait_url`
		FROM `yssp_comment` yc
		JOIN `qy_user_integral_view` qu ON yc.`comment_user_id` = qu.ID
		AND
		yc.comment_work_id=#{workId} AND yc.comment_flag = 3
		WHERE yc.comment_status = 1
		ORDER BY
		yc.comment_created_time DESC
		LIMIT 3
	</select>

</mapper>